<?php
/**
 * @file
 *
 * Provides a block and a theme function to display "social buttons" like
 * Facebook, twitter and google plus.
 * @see classes folder.
 *
 * If block is not enough configurable, use directly theme function and pass it the 
 * params you need, the way you need.
 *
 * If theme function is not flexible enough, use directly the classes API to call
 * widgets, like this :
 *
 *  $params = array('data-send' => FALSE, 'data-layout' => 'button_count');
 *  $facebook_like = new na_facebooklike($params);
 *  print $facebook_like->render();
 *
 *  $twitter_share = new na_twittershare();
 *  print $twitter_share->render(),
 */

/**
 * Declare our classes.
 * A widget class MUST be declared in this array to become available in block configuration and in
 * default theme function.
 */
function na_socialshare_widgets_classes() {
  return array(
    'na_facebooklike',
    'na_facebooksend',
    'na_facebookcomment',
    'na_googleplus',
    'na_twittershare',
    'na_twitterfollow',
    //'na_twitterhashtag',
  );
}

/**
 * Implements hook_block_info().
 */
function na_socialshare_block_info() {
  return array('na_socialshare' => array('info' => t('Social Share buttons')));
}

/**
 * Implements hook_block_view()
 */
function na_socialshare_block_view($delta = '') {
  $block = array();
  if ($delta == 'na_socialshare') {
    $snippets = variable_get('na_socialshare_widgets', na_socialshare_default_config());
    $widgets = natools_parse_snippet_list($snippets);
    $block['subject'] = t('Social share');
    $block['content'] = theme('na_socialshare', array('widgets' => $widgets));
  }
  return $block;
}

/**
 * Implements hook_block_configure()
 */
function na_socialshare_block_configure($delta = '') {
  $form = array();
  if ($delta == 'na_socialshare') {
    $form['na_socialshare_widgets'] = array(
      '#type' => 'textarea',
      '#title' => t('Enabled following social widgets. See list of available widgets id in table below this field.'),
      '#default_value' => variable_get(
        'na_socialshare_widgets', 
        na_socialshare_default_config()),
      '#description' => na_socialshare_help_instructions(),
      '#rows' => 5,
    );
  }
  return $form;
}

/**
 * Implements hook_block_save()
 */
function na_socialshare_block_save($delta = '', $edit = array()) {
  if ($delta == 'na_socialshare') {
    variable_set('na_socialshare_widgets', $edit['na_socialshare_widgets']);
  }
}

function na_socialshare_default_config() {
  return implode("\r\n", array(
    "na_facebooklike?data-show-faces=true&data-send=true",
    "na_twitterhashtag?hashtag=test",
    "na_googleplus",
  ));
}

/**
 * Provide necessary documentation about how use our module and its widgets.
 * This appears in block configuration.
 */
function na_socialshare_help_instructions() {

  $help = "<p>Table below list availables widgets and their custom params, if any. </p>";

  $table = array('header' => array('Class', 'Name', 'Custom params', 'Help', 'Preview'));
   
  $classes = na_socialshare_widgets_classes();
  foreach ($classes as $class) {

    $widget = new $class();
    $params_custom = array();
    foreach ($widget->params_custom() as $variable => $description) {
      $params_custom[] = "<strong>$variable</strong> : $description";
    }
    $params_custom_list = theme('item_list', array('items' => $params_custom));
    $table['rows'][] = array(
      $class, 
      $widget->title() ,
      $params_custom_list , 
      l($widget->help_url(), $widget->help_url(), array('attributes' => array('target' => '_blank'))),
      $widget->render(),
    );
  }

  $table = theme('table', $table);

  return $help.$table;
}

/**
 * Implements hook_theme().
 */
function na_socialshare_theme($existing, $type, $theme, $path) {
  return array(
    'na_socialshare' => array(
      'variables' => array('widgets' => array()),
    ),
  );
}

/**
 * Displaying social share buttons.
 *
 * @param $vars 
 * associative array where key is a widget id, and value are options for buttons constructor. Ex :
 * array(
 *   'facebook_like' => array('data-send' => true), 
 *   'twitter_share' => array(),
 * );
 * @return string
 */
function theme_na_socialshare($vars = array()) {
  $output = '';
  $output .= '<div id="na-socialshare">';
  $output .= '<ul>';
  foreach ($vars['widgets'] as $widget) {
    $output .= '<li>' . $widget->render() . '</li>';
  }
  $output .= '</ul>';
  $output .= '</div>';
  return $output;
}

/**
 * Prepare theme function : instanciate widgets according to config variables.
 * Only widgets declared in na_socialshare_widgets_classes() are displayed.
 */
function template_process_na_socialshare(&$vars) {
  foreach ($vars['widgets'] as $id => $widget) {
    $class = $widget['name'];
    if (class_exists($class)) {
      $vars['widgets'][$id] = new $class($widget['params']);
    }
    else {
      unset($vars['widgets'][$id]);
      trigger_error("No widget with class $class was found", E_USER_ERROR);
    }
  }
}

